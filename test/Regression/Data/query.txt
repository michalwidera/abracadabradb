# declaration of input time series
declare a INTEGER,b INTEGER stream core0, 3 FILE datafile1.dat
declare c INTEGER,d INTEGER stream core1, 1
declare e INTEGER,f INTEGER stream core2, 3

# time series junction queries
select core0[1,1],a+1,core1.c stream str1 from core0#(core1>1)
select (e+1)*2+1,1  stream str2 from core2
select core1[0,1] stream str3 from core1+core2

# staging
select 1 stream str4 from core0>1
select floor(core1[0]) stream str5 from core1@(2,2)#(core1>1)

# Stop here
stop

# This is testing area here and below
#
#

declare a INTEGER,b INTEGER stream core0, 500
declare c INTEGER,d INTEGER stream core1, 200
select 1,1 stream str2 from core0
stop

#
#select * stream str4 from core0@(1,1)
#select core0[1,1],d+2,core1.e stream str1 from core0#(core1>1)
#select * stream str5 from ( str2 # core - ( 1 , 2 ) ) # str1
#select (d+1)*2+1,floor(5.2)  stream str2 from (core3>1)#core0
#select 1,core1.e stream str3 from core3
#select 1 as pole1,2 as pole2,3 as pole3 stream str1 from core
#select 2 as pole4, pole1*(pole2>3)-20.5 stream str2 from str1#core
#select pole4 stream str3 from ( str2 # core - ( 1 , 2 ) ) # str1
#select 3 stream str4 from core&1
#select 3 stream str5 from core%1
#select abc[0] stream str5 from { select pole3 stream abc from str1 }#str1
#select str3[0] stream str4 from str3 filter by str3[1] <> 1
#
#set[1,7]

#declare a INT,b INT stream core0, 1
#declare d INT,e INT stream core3, 0.2
#declare d INT,e INT stream core1, 3/4
#select core0[1,1],d+{1,1},core1.e stream str1 from core0#(core1>1)
#select (d+1)*2+1,floor(5.2)  stream str2 from (core3>1)#core0
#select {1,1},core1.e stream str3 from core3
#------------------------ set[8-14]

#declare a INTEGER,b INTEGER stream core0, 1
#declare d INTEGER,e RATIONAL stream core1, 0.2
##select a,core1.e stream str1 from core0#(core1>1)
#select str1[0]+str1[1,1] stream str1 from core0+(core1#core0)
#select ceil( (d*2+1)/2 ),floor( (d*2+1)/2 ),(d*2+1)/2 ,1  stream str2 from core1
#select (1+1)*3.14+(-1),1  stream str3 from core1
#select * stream str4 from core1-(2,3)
#select (core0[2,1]+core0[1])*2 stream str3 from (core0+1)#(core1>1)
#------------------------ set [18-24]

#declare a INTEGER(4),b INTEGER(4) stream core0, 1
#declare d INTEGER(4),e CHAR(10) stream core3, 0.2
#declare d INTEGER(4),e CHAR(10) stream core1, 2
#declare d INTEGER(4),e INTEGER(10) stream core2, 3/4
#select core0[1,1],a+{1,1},core1.e stream str1 from core0#(core1>1)
#select (d+1)*2+1,1  stream str2 from core0
#------------------------- set from work

#declare a INTEGER(4),b INTEGER(4) stream core0, 1
#declare d INTEGER(4),e INTEGER(10) stream core3, 0.02
#declare d INTEGER(4),e INTEGER(10) stream core1, 2
#declare d INTEGER(4),e INTEGER(10) stream core2, 3/4
#declare d INTEGER(4),e INTEGER(4),f INTEGER(4) stream core2, 4
#select core0[1,1],a+{1,1},core1.e stream str1 from core0#(core1>1)
#select (d+1)*2+1,1  stream str2 from core3
#select (core0[2,1]+core0[1])*2 stream str1 from core0#core1 
#select a,e+1 stream str1 from core0#core1 
#select a , 1 stream str22 from core0&3 
#select max( core ) stream str3 from core1@(5,3)>1 
#select a stream str4 from core1#core2 
#select 10 stream str3 from str1 
#select core1.a / 2 stream str2 from (core1+3) # str3 
#select core[0] stream str3 from (core+str1)#core1 
#select core1[0,3] stream str45 from ( core1 - (1,2) )  # core 
#select a stream str5 from ( core1 % 3 ) # core 
#select f_1 stream str6 from str1 
#select f_1, f_2*(f_2+3)-20.5 as f_2 stream str7 from str1 
#select agse( (f_1,f_2), NUMBER<10> , 2 ) stream str4 from core  
#select 3 stream str8 from core&1 
#select 3 stream str5 from core%1 
#select abc[0] stream str5 from { select pole3 stream abc from str1 }#str1 
#select str3[0] stream str4 from str3 filter by str3[1] <> 1 
